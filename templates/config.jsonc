// Using the VS Code jsonc lightweight definition, supporting comments but otherwise no deviation from JSON
// https://code.visualstudio.com/docs/languages/json#_json-with-comments

// _ comment lines starting with underscore indicate path relative to root

/* _ */
{
  /* _.definitions */
  // options, settings and presets
  // the key MUST be present
  // the object MUST be present
  "definitions" : {

    /* _.definitions.regexSelectors */
    // contains custom-defined reusable regex bits to select dates, tags etc
    // the key MUST be present
    // IF the array is null, then it is assumed custom functionality is unavailable
    //   THEN the parsing application MUST ignore custom regex assignments everywhere
    // IF the array is present, including a 0-length array
    //    THEN the parsing application MUST attempt to find custom regex and MUST throw an error if not found
    //    The parsing application MAY not cancel the process and offer options for default replacement instead
    "regexSelectors" : [
      {

        // for each individual item in the array
        "key" : 23,  // Integer unique key to be used for replacement seek, MUST be not null and unique
        "name" : "example of date ISO",  // String of user defined name, MAY be null
        "selector" : "[12][0-9]{3}-[012][0-9]-[0123][0-9]"  // Valid Regex selector, MAY be null
      }
    ],

    /* _.definitions.yamlOperators */
    // contains custom-defined reusable YAML/FrontMatter usage rules
    // the key MUST be present
    // IF the array is null, then it is assumed custom functionality is unavailable
    //   THEN the parsing application MUST ignore custom usage rule assignments everywhere
    // IF the array is present, including a 0-length array
    //    THEN the parsing application MUST attempt to find custom usage rules and MUST throw an error if not found
    //    The parsing application MAY not cancel the process and offer options for default replacement instead
    "yamlOperators" : [
      {

        // for each individual item in the array
        "key": 12,  // Integer unique key to be used for replacement seek, MUST be not null and unique
        "name" : "example of dumping everything in tags",  // String of user defined name, MAY be null
        "property" : "topics",   // String containing the FrontMatter property target, MUST be not null, MUST be not empty
        "actionChain" : " :quoteless.to.tagPool"  //custom action to use, MAY be null
      }
    ],

    /* _.definitions.knowledge */
    // settings about interpretation of the data
    // presets, constrains and definitions of what various parts of the data may mean or how to use them
    "knowledge" : {
      "tagPool" : true,
      "linkPool" : true,
      "timelines" : [
      ],
      "cards" : [
      ],
      "actors" : [
      ]
    }
  },
  "folders" : {
    "folder1" : {
      "path" : "/folder_1",
      "contents" : {
        "ignorePattern" : null,
        "parseSelector" : null,
        "children" : ":inherit",
        "extras" : {
          "frontMatterInTxt" : true
        }
      }
      "friendlyName" : "Folder No 1",
      "friendlyDescription" : "",
      "type" : "notes",
      "date" : ":text.firstParsed.ISO",
      "linkName" : ":none",
      "seekLinks" : true,
      "frontMatter" : {
      },
    },
    "folder2" : {
      "path" : "/folder_two",
      "contents" : {
        "ignorePattern" : "*archive*",
        "parseSelector" : ":top.100",
        "children" : null
      }
      "friendlyName" : "Folder number 2",
      "friendlyDescription" : "Top 100 by modified date",
      "type" : "notes",
      "date" : ":fileName.firstParsed.ISO",
      "linkName" : ":text.firstParsed.Header",
      "seekLinks" : true,
      "frontMatter" : {
        "topics" : ":to.linkPool"
      },
    }
  },
  "files" : {
    "singleFile1" : {
      "path" : "/bad_folder/goodFile.md",
      "friendlyName" : "File - Single - 1",
      "friendlyDescription" : "In a bad folder",
      "type" : "logs",
      "date" : null,
      "logEntry" : {
        "timestamp" : ":text.ISO",
        
      }
      "linkName" : ":none",
      "seekLinks" : true,
      "frontMatter" : {
      },
  },
  "thirdParties" : null,
  "output" : {
    "features" : {
      "css" : true,
      "js" : true,
      "svelteBits" : true
    },
    "fileName" : "{date:yyyy_MM_dd}_kb.html",
    "templating" : {
      "header" : {
        "text" : "",
        "spacer" : false
      },
      "footer" : {
        "text" : "",
        "spacer" : false        
      }
    }
  }
}
